#####################################################################
# Backstage Catalog Entity Example
#
# Purpose:
# This file defines example entities for the Backstage software catalog.
# It helps Backstage users organize, document, and manage their software
# components and systems in a central place.
#
# Example Scenarios:
# - You have a Python library that your team maintains and want to
#   document its ownership, links, and documentation in Backstage.
# - You want to group related components under a "System" (like a project)
#   and assign ownership and domain for better discoverability.
# - You want to provide quick links (like dashboards) and metadata
#   (like tags and annotations) for your software assets.
#####################################################################

# Defines a software component (e.g., a Python library) in the catalog
apiVersion: backstage.io/v1alpha1
kind: Component

metadata:
    # Unique name for the component
    name: demo-catalog-component
    # Short description of what this component is
    description: An example Python library for demo purposes
    # Annotations provide extra metadata for integrations and tools
    annotations:
        # Reference to the TechDocs documentation location
        backstage.io/techdocs-ref: dir:.
        # GitHub project slug for linking to the repository
        github.com/project-slug: backstage
    # Tags help categorize the component (e.g., by language)
    tags:
        - python
        - demo
    # Links provide quick access to related resources
    links:
        # Example: Link to an admin dashboard for this component
        - url: https://google.com
          title: Admin Dashboard
          icon: dashboard
          type: admin-dashboard

spec:
    # Type of component (e.g., service, library, website)
    type: website
    # Lifecycle stage (e.g., production, development, experimental)
    lifecycle: production
    # Owner of the component (usually a team or person)
    owner: devops-dummy
    # System this component belongs to (see below)
    system: dummy

---

# Defines a system to group related components
apiVersion: backstage.io/v1alpha1
kind: System

metadata:
    # Unique name for the system
    name: dummy
    # Description of what this system is for
    description: Handy tools to keep artists in the loop

spec:
    # Owner of the system (team or person)
    owner: product-dummy
    # Domain this system belongs to (e.g., business area)
    domain: paints
